"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-resize-detector";
exports.ids = ["vendor-chunks/react-resize-detector"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-resize-detector/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-resize-detector/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value:true}));var React=__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),reactDom=__webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"),debounce=__webpack_require__(/*! lodash/debounce */ \"(ssr)/./node_modules/lodash/debounce.js\"),throttle=__webpack_require__(/*! lodash/throttle */ \"(ssr)/./node_modules/lodash/throttle.js\");/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}var patchResizeCallback = function (resizeCallback, refreshMode, refreshRate, refreshOptions) {\n    switch (refreshMode) {\n        case 'debounce':\n            return debounce(resizeCallback, refreshRate, refreshOptions);\n        case 'throttle':\n            return throttle(resizeCallback, refreshRate, refreshOptions);\n        default:\n            return resizeCallback;\n    }\n};\nvar isFunction = function (fn) { return typeof fn === 'function'; };\nvar isSSR = function () { return typeof window === 'undefined'; };\nvar isDOMElement = function (element) {\n    return element instanceof Element || element instanceof HTMLDocument;\n};var ResizeDetector = /** @class */ (function (_super) {\n    __extends(ResizeDetector, _super);\n    function ResizeDetector(props) {\n        var _this = _super.call(this, props) || this;\n        _this.cancelHandler = function () {\n            if (_this.resizeHandler && _this.resizeHandler.cancel) {\n                // cancel debounced handler\n                _this.resizeHandler.cancel();\n                _this.resizeHandler = null;\n            }\n        };\n        _this.attachObserver = function () {\n            var _a = _this.props, targetRef = _a.targetRef, observerOptions = _a.observerOptions;\n            if (isSSR()) {\n                return;\n            }\n            if (targetRef && targetRef.current) {\n                _this.targetRef.current = targetRef.current;\n            }\n            var element = _this.getElement();\n            if (!element) {\n                // can't find element to observe\n                return;\n            }\n            if (_this.observableElement && _this.observableElement === element) {\n                // element is already observed\n                return;\n            }\n            _this.observableElement = element;\n            _this.resizeObserver.observe(element, observerOptions);\n        };\n        _this.getElement = function () {\n            var _a = _this.props, querySelector = _a.querySelector, targetDomEl = _a.targetDomEl;\n            if (isSSR())\n                return null;\n            // in case we pass a querySelector\n            if (querySelector)\n                return document.querySelector(querySelector);\n            // in case we pass a DOM element\n            if (targetDomEl && isDOMElement(targetDomEl))\n                return targetDomEl;\n            // in case we pass a React ref using React.createRef()\n            if (_this.targetRef && isDOMElement(_this.targetRef.current))\n                return _this.targetRef.current;\n            // the worse case when we don't receive any information from the parent and the library doesn't add any wrappers\n            // we have to use a deprecated `findDOMNode` method in order to find a DOM element to attach to\n            var currentElement = reactDom.findDOMNode(_this);\n            if (!currentElement)\n                return null;\n            var renderType = _this.getRenderType();\n            switch (renderType) {\n                case 'renderProp':\n                    return currentElement;\n                case 'childFunction':\n                    return currentElement;\n                case 'child':\n                    return currentElement;\n                case 'childArray':\n                    return currentElement;\n                default:\n                    return currentElement.parentElement;\n            }\n        };\n        _this.createResizeHandler = function (entries) {\n            var _a = _this.props, _b = _a.handleWidth, handleWidth = _b === void 0 ? true : _b, _c = _a.handleHeight, handleHeight = _c === void 0 ? true : _c, onResize = _a.onResize;\n            if (!handleWidth && !handleHeight)\n                return;\n            var notifyResize = function (_a) {\n                var width = _a.width, height = _a.height;\n                if (_this.state.width === width && _this.state.height === height) {\n                    // skip if dimensions haven't changed\n                    return;\n                }\n                if ((_this.state.width === width && !handleHeight) || (_this.state.height === height && !handleWidth)) {\n                    // process `handleHeight/handleWidth` props\n                    return;\n                }\n                onResize === null || onResize === void 0 ? void 0 : onResize(width, height);\n                _this.setState({ width: width, height: height });\n            };\n            entries.forEach(function (entry) {\n                var _a = (entry && entry.contentRect) || {}, width = _a.width, height = _a.height;\n                var shouldSetSize = !_this.skipOnMount && !isSSR();\n                if (shouldSetSize) {\n                    notifyResize({ width: width, height: height });\n                }\n                _this.skipOnMount = false;\n            });\n        };\n        _this.getRenderType = function () {\n            var _a = _this.props, render = _a.render, children = _a.children;\n            if (isFunction(render)) {\n                // DEPRECATED. Use `Child Function Pattern` instead\n                return 'renderProp';\n            }\n            if (isFunction(children)) {\n                return 'childFunction';\n            }\n            if (React.isValidElement(children)) {\n                return 'child';\n            }\n            if (Array.isArray(children)) {\n                // DEPRECATED. Wrap children with a single parent\n                return 'childArray';\n            }\n            // DEPRECATED. Use `Child Function Pattern` instead\n            return 'parent';\n        };\n        var skipOnMount = props.skipOnMount, refreshMode = props.refreshMode, _a = props.refreshRate, refreshRate = _a === void 0 ? 1000 : _a, refreshOptions = props.refreshOptions;\n        _this.state = {\n            width: undefined,\n            height: undefined\n        };\n        _this.sizeRef = {\n            current: _this.state\n        };\n        _this.skipOnMount = skipOnMount;\n        _this.targetRef = React.createRef();\n        _this.observableElement = null;\n        if (isSSR()) {\n            return _this;\n        }\n        _this.resizeHandler = patchResizeCallback(_this.createResizeHandler, refreshMode, refreshRate, refreshOptions);\n        _this.resizeObserver = new window.ResizeObserver(_this.resizeHandler);\n        return _this;\n    }\n    ResizeDetector.prototype.componentDidMount = function () {\n        this.attachObserver();\n    };\n    ResizeDetector.prototype.componentDidUpdate = function () {\n        this.attachObserver();\n        this.sizeRef.current = this.state;\n    };\n    ResizeDetector.prototype.componentWillUnmount = function () {\n        if (isSSR()) {\n            return;\n        }\n        this.observableElement = null;\n        this.resizeObserver.disconnect();\n        this.cancelHandler();\n    };\n    ResizeDetector.prototype.render = function () {\n        var _a = this.props, render = _a.render, children = _a.children, _b = _a.nodeType, WrapperTag = _b === void 0 ? 'div' : _b;\n        var _c = this.state, width = _c.width, height = _c.height;\n        var childProps = { width: width, height: height, targetRef: this.targetRef };\n        var renderType = this.getRenderType();\n        switch (renderType) {\n            case 'renderProp':\n                return render === null || render === void 0 ? void 0 : render(childProps);\n            case 'childFunction': {\n                var childFunction = children;\n                return childFunction === null || childFunction === void 0 ? void 0 : childFunction(childProps);\n            }\n            case 'child': {\n                // @TODO bug prone logic\n                var child = children;\n                if (child.type && typeof child.type === 'string') {\n                    // child is a native DOM elements such as div, span etc\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    childProps.targetRef; var nativeProps = __rest(childProps, [\"targetRef\"]);\n                    return React.cloneElement(child, nativeProps);\n                }\n                // class or functional component otherwise\n                return React.cloneElement(child, childProps);\n            }\n            case 'childArray': {\n                var childArray = children;\n                return childArray.map(function (el) { return !!el && React.cloneElement(el, childProps); });\n            }\n            default:\n                return React.createElement(WrapperTag, null);\n        }\n    };\n    return ResizeDetector;\n}(React.PureComponent));function withResizeDetector(ComponentInner, options) {\n    if (options === void 0) { options = {}; }\n    var ResizeDetectorHOC = /** @class */ (function (_super) {\n        __extends(ResizeDetectorHOC, _super);\n        function ResizeDetectorHOC() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.ref = React.createRef();\n            return _this;\n        }\n        ResizeDetectorHOC.prototype.render = function () {\n            var _a = this.props, forwardedRef = _a.forwardedRef, rest = __rest(_a, [\"forwardedRef\"]);\n            var targetRef = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : this.ref;\n            return (React.createElement(ResizeDetector, __assign({}, options, { targetRef: targetRef }),\n                React.createElement(ComponentInner, __assign({ targetRef: targetRef }, rest))));\n        };\n        return ResizeDetectorHOC;\n    }(React.Component));\n    function forwardRefWrapper(props, ref) {\n        return React.createElement(ResizeDetectorHOC, __assign({}, props, { forwardedRef: ref }));\n    }\n    var name = ComponentInner.displayName || ComponentInner.name;\n    forwardRefWrapper.displayName = \"withResizeDetector(\".concat(name, \")\");\n    return React.forwardRef(forwardRefWrapper);\n}function useResizeDetector(_a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.skipOnMount, skipOnMount = _c === void 0 ? false : _c, refreshMode = _b.refreshMode, _d = _b.refreshRate, refreshRate = _d === void 0 ? 1000 : _d, refreshOptions = _b.refreshOptions, _e = _b.handleWidth, handleWidth = _e === void 0 ? true : _e, _f = _b.handleHeight, handleHeight = _f === void 0 ? true : _f, targetRef = _b.targetRef, observerOptions = _b.observerOptions, onResize = _b.onResize;\n    var skipResize = React.useRef(skipOnMount);\n    var _g = React.useState({\n        width: undefined,\n        height: undefined\n    }), size = _g[0], setSize = _g[1];\n    // we are going to use this ref to store the last element that was passed to the hook\n    var _h = React.useState((targetRef === null || targetRef === void 0 ? void 0 : targetRef.current) || null), refElement = _h[0], setRefElement = _h[1];\n    // if targetRef is passed, we need to update the refElement\n    // we have to use setTimeout because ref get assigned after the hook is called\n    // in the future releases we are going to remove targetRef and force users to use ref returned by the hook\n    if (targetRef) {\n        setTimeout(function () {\n            if (targetRef.current !== refElement) {\n                setRefElement(targetRef.current);\n            }\n        }, 0);\n    }\n    // this is a callback that will be called every time the ref is changed\n    // we call setState inside to trigger rerender\n    var onRefChange = React.useCallback(function (node) {\n        if (node !== refElement) {\n            setRefElement(node);\n        }\n    }, [refElement]);\n    // adding `current` to make it compatible with useRef shape\n    onRefChange.current = refElement;\n    React.useEffect(function () {\n        return function () {\n            // component is unmounted\n            // clear ref to avoid memory leaks\n            setRefElement(null);\n            onRefChange.current = null;\n        };\n    }, []);\n    var shouldSetSize = React.useCallback(function (prevSize, nextSize) {\n        if (prevSize.width === nextSize.width && prevSize.height === nextSize.height) {\n            // skip if dimensions haven't changed\n            return false;\n        }\n        if ((prevSize.width === nextSize.width && !handleHeight) ||\n            (prevSize.height === nextSize.height && !handleWidth)) {\n            // process `handleHeight/handleWidth` props\n            return false;\n        }\n        return true;\n    }, [handleWidth, handleHeight]);\n    var resizeCallback = React.useCallback(function (entries) {\n        if (!handleWidth && !handleHeight)\n            return;\n        if (skipResize.current) {\n            skipResize.current = false;\n            return;\n        }\n        entries.forEach(function (entry) {\n            var _a = (entry === null || entry === void 0 ? void 0 : entry.contentRect) || {}, width = _a.width, height = _a.height;\n            setSize(function (prevSize) {\n                if (!shouldSetSize(prevSize, { width: width, height: height }))\n                    return prevSize;\n                return { width: width, height: height };\n            });\n        });\n    }, [handleWidth, handleHeight, skipResize, shouldSetSize]);\n    var resizeHandler = React.useCallback(patchResizeCallback(resizeCallback, refreshMode, refreshRate, refreshOptions), [\n        resizeCallback,\n        refreshMode,\n        refreshRate,\n        refreshOptions\n    ]);\n    // on refElement change\n    React.useEffect(function () {\n        var resizeObserver;\n        if (refElement) {\n            resizeObserver = new window.ResizeObserver(resizeHandler);\n            resizeObserver.observe(refElement, observerOptions);\n        }\n        else {\n            if (size.width || size.height) {\n                setSize({ width: undefined, height: undefined });\n            }\n        }\n        return function () {\n            var _a, _b, _c;\n            (_a = resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect) === null || _a === void 0 ? void 0 : _a.call(resizeObserver);\n            (_c = (_b = resizeHandler).cancel) === null || _c === void 0 ? void 0 : _c.call(_b);\n        };\n    }, [resizeHandler, refElement]);\n    React.useEffect(function () {\n        onResize === null || onResize === void 0 ? void 0 : onResize(size.width, size.height);\n    }, [size]);\n    return __assign({ ref: onRefChange }, size);\n}exports[\"default\"]=ResizeDetector;exports.useResizeDetector=useResizeDetector;exports.withResizeDetector=withResizeDetector;//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-resize-detector/build/index.js\n");

/***/ })

};
;